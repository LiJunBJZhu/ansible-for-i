- name: run without options
  ibmi_tcp_interface:
  register: tcp_result
  failed_when: "'one of the following is required: internet_address, alias_name' not in tcp_result.msg"

- name: create a new IFC 
  ibmi_tcp_interface: 
    line_description: '{{lind_name}}'
    subnet_mask: '{{subnet}}'
    alias_name: '{{ifc_name}}'
    internet_address: '{{ifc_ip}}'

- name: create a new IFC without internet_address 
  ibmi_tcp_interface: 
    line_description: '{{lind_name}}'
    subnet_mask: '{{subnet}}'
    alias_name: '{{ifc_name}}'
    #internet_address: '{{ifc_ip}}'
  register: tcp_result
  ignore_errors: true

- name: 
  assert:
    that:
      - "'Parameter internet_address is not specified' in tcp_result.msg"

- name: create a new IFC again
  ibmi_tcp_interface: 
    line_description: '{{lind_name}}'
    subnet_mask: '{{subnet}}'
    alias_name: '{{ifc_name}}'
    internet_address: '{{ifc_ip}}'
  ignore_errors: true

- name: change IFS with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    line_description: '{{lind_name}}'
    subnet_mask: '{{subnet}}' 
    alias_name: '{{ifc_name}}'
    internet_address: '12.12.12.2'
  ignore_errors: true

- name: query IFS with invalid alias_name
  ibmi_tcp_interface: 
    alias_name: 'abc'

- name: query IFS with invalid internet_address
  ibmi_tcp_interface: 
    internet_address: '12.12.12.2'

- name: change a not existing IFC 
  ibmi_tcp_interface: 
    line_description: '{{lind_name}}'
    subnet_mask: '{{subnet}}'
    alias_name: 'abc'
    #internet_address: '{{ifc_ip}}'
    max_transmission_unit: '1024'
  register: tcp_result
  failed_when: "'Parameter internet_address is not specified' not in tcp_result.msg"

- name: start IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: '{{ifc_name}}'
    internet_address: '12.12.12.2'
    state: 'active'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'12.12.12.2 interface not started' in tcp_result.stderr"

- name: start IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: 'abc'
    internet_address: '{{ifc_ip}}'
    state: 'active'

- name: start IFC with invalid alias_name
  ibmi_tcp_interface: 
    alias_name: 'abc'
    state: 'active'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'TCP/IP interface not found' in tcp_result.stderr"

- name: start IFC with invalid internet_address
  ibmi_tcp_interface: 
    internet_address: '12.12.12.2'
    state: 'active'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'12.12.12.2 interface not started' in tcp_result.stderr"

- name: end IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: '{{ifc_name}}'
    internet_address: '12.12.12.2'
    state: 'inactive'
  ignore_errors: true

- name: end IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: 'abc'
    internet_address: '{{ifc_ip}}'
    state: 'inactive'
  ignore_errors: true

- name: end IFC with invalid alias_name
  ibmi_tcp_interface: 
    alias_name: 'abc'
    state: 'inactive'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'TCP/IP interface not found' in tcp_result.stderr" 

- name: end IFC with invalid internet_address
  ibmi_tcp_interface: 
    internet_address: '12.12.12.2'
    state: 'inactive'
  ignore_errors: true

- name: remove IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: '{{ifc_name}}'
    internet_address: '12.12.12.2'
    state: 'absent'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'Interface not found' in tcp_result.stderr"

- name: remove IFC with unmatch alias_name and internet_address
  ibmi_tcp_interface: 
    alias_name: 'abc'
    internet_address: '{{ifc_ip}}'
    state: 'absent'
  register: tcp_result

- name: remove IFC with invalid internet_address
  ibmi_tcp_interface: 
    internet_address: '12.12.12.2'
    state: 'absent'
  register: tcp_result
  ignore_errors: true

- name:
  assert:
    that: 
      - "'Interface not found' in tcp_result.stderr"


